plugins {
    id 'application'
    id 'com.google.protobuf' version '0.8.16'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
}

repositories {
    maven {
        url "https://maven-central.storage-download.googleapis.com/maven2/"
    }
    mavenCentral()
    mavenLocal()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def grpcVersion = '1.39.0'
def protocVersion = '3.17.2'

dependencies {
    implementation "io.grpc:grpc-alts:${grpcVersion}"
    compileOnly "org.apache.tomcat:annotations-api:6.0.53"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

startScripts.enabled = false

task mapiPluginServer(type: CreateStartScripts) {
    mainClassName = 'com.forallsecure.mayhem4api.MapiPluginServer'
    applicationName = 'mapi-plugin-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(mapiPluginServer)
    fileMode = 0755
}